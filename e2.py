"""
Even Fibonacci numbers
======================

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.
"""
fibMap = {}


def memoize_fib(func):
    def _memoize_fib(value):
        memoizedResult = fibMap.get(value)
        if memoizedResult:
            return memoizedResult

        result = func(value)
        fibMap[value] = result
        return result

    return _memoize_fib


@memoize_fib
def fib(value):
    if value < 2:
        return 1

    return fib(value - 2) + fib(value - 1)


if __name__ == '__main__':
    sequence = [fib(num) for num in range(1, 50) if fib(num) < 4000000]
    result = 0
    for element in sequence:
        if element % 2 == 0:
            result += element
    print(result)
